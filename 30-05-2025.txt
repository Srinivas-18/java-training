30/05/2025
session-1

Number Based Patterns:

1. 

1 
2 2
3 3 3
4 4 4 4
5 5 5 5 5

public class Demo5{
    public static void main(String[] args) {
        int n =5;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print(i+" ");
            }System.out.println();
        }
    }
}

2.

    1
   22
  333
 4444
55555

public class Demo5{
    public static void main(String[] args) {
        int n =5;
        
        for(int i=1;i<=n;i++){
            for(int spaces=1;spaces<=n-i;spaces++){
            System.out.print(" ");
        }
            for(int j=1;j<=i;j++){
                System.out.print(i );
            }System.out.println();
        }
    }
}

3. 

1 1 1 1 1
  2 2 2 2
    3 3 3
      4 4
        5

public class Demo5{
    public static void main(String[] args) {
        int n =5;
        
        for(int i=1;i<=n;i++){
            for(int spaces=1;spaces<=i;spaces++){
            System.out.print("  ");
        }
            for(int j=n;j>=i;j--){
                System.out.print(i + " " );
            }System.out.println();
        }
    }
}

4.

5 5 5 5 5
  4 4 4 4
    3 3 3
      2 2
        1

public class Demo5{
    public static void main(String[] args) {
        int n =5;
        
        for(int i=n;i>=1;i--){
            for(int spaces=1;spaces<=n-i;spaces++){
            System.out.print("  ");
        }
            for(int j=1;j<=i;j++){
                System.out.print(i + " " );
            }System.out.println();
        }
    }
}


5.

5 5 5 5 5 
4 4 4 4 
3 3 3 
2 2 
1  

public class Demo5{
    public static void main(String[] args) {
        int n =5;
        
        for(int i=n;i>=1;i--){
            for(int spaces=1;spaces<=i;spaces++){
            System.out.print("");
        }
            for(int j=1;j<=i;j++){
                System.out.print(i + " " );
            }System.out.println();
        }
    }
}

6. 

5
4 4 
3 3 3
2 2 2 2
1 1 1 1 1

public class Demo5{
    public static void main(String[] args) {
        int n =5;
        
        for(int i=5;i>=1;i--){
            for(int j=1;j<=n-i+1;j++){
                System.out.print(i + " " );
            }System.out.println();
        }
    }
}

7. 

1 
0 1
1 0 1
0 1 0 1
1 0 1 0 1

public class Demo5{
    public static void main(String[] args) {
        int n =5;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                if((i+j) %2==0){
                    System.out.print(1 + " " );
                }else{
                    System.out.print(0+" ");
                }
                
            }System.out.println();
        }
    }
}

8.

1 2 3 4 5 
2 3 4 5 1
3 4 5 1 2
4 5 1 2 3
5 1 2 3 4

public class Demo5{
    public static void main(String[] args) {
        int n =5;
        for(int i=1;i<=n;i++){
            for(int j=i;j<=n;j++){
                System.out.print(j +" ");
                
                
            } for (int j=1;j<i;j++){
                System.out.print(j+" ");
            }
            System.out.println();
        }
    }
}


				"Number Crunching"

1. write a program to find the count of the digit.

import java.util.Scanner;
public class Demo5{
	// brute force approach
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n= sc.nextInt();
        int c=0;
        while(n!=0){
            n=n/10;
            c++;

        }
        System.out.println("the count is:" + c);
    }
}

2. write a program to find the divisor of the given number

import java.util.Scanner;
public class DivisorOfNum {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int div=2;
        while(div<=n/2)
        {
            if(n%div==0){
                System.out.print(div+" ");
            }
            div++;
        }

    }
}

3. Write a program to print the count of divisors
4. write a program to print Common divisible of two numbers

public class Demo5 {
    public static void main(String[] args) {
        int n=100;
        for(int i=1;i<=n;i++){
            if(i%3==0 && i%5==0){
                System.out.print(i+" ");
            }
        }
    }
}

7. write the program to print the sum of digits
8. write a program to reverse the given number

import java.util.Scanner;
public class Demo5 {
    public static void main(String[] args) {
        int n=123;
        int sum=0;
        while(n!=0){
            int rem=n%10;
            sum=sum*10+rem;
            n=n/10;
        }
        System.out.println(sum);
    }
}

9. armstrong number

public class AmstrongNum {
    public static void main(String[] args) {
        int n=371;
        int original=n;
        int sum=0;
        while(n>0){
            int digit=n%10;
            sum+=(int)Math.pow(digit,3);
            n=n/10;
        }
        if(sum == original){
            System.out.println("yes");
        }else{
            System.out.println("No");
        }
    }    
}

10. neon number:

import java.util.Scanner;

public class Demo5 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();

        if (isNeonNumber(number)) {
            System.out.println(number + " is a Neon number.");
        } else {
            System.out.println(number + " is not a Neon number.");
        }
        scanner.close();
    }

    public static boolean isNeonNumber(int number) {
        int square = number * number;
        int sumOfDigits = 0;

        while (square > 0) {
            sumOfDigits += square % 10;
            square /= 10;
        }

        return sumOfDigits ==number;
    }
}