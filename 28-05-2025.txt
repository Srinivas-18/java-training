28/05/2025
Session-1

control flow statements
1. if
2. if-else
3. if-elseif
4. nested-if 

& int+int=int
int+float=float
string+any datatype = string &

repo = https://github.com/aashiqui2/KLU-Java-Training

write a program to find greatest of two numbers (Main.java)
write a program to find greatest of three numbers (demo.java)
write a program to print the tables(demo1.java)
write a program to swap the variable with the help of the third variable and without the help of the third variable (demo3.java)

loops completed              | row    and     --- column

patterns "A"

public class Demo4{
    public static void main(String[] args) {
        for(int row = 0;row<7;row++){
            
            for(int col = 0; col< 5;col++){
        if (col == 0 && row != 0 || row == 3 || col == 4 && row != 0 || row == 0 && col != 0 && col != 4) {
            System.out.print("* ");
        } else {
            System.out.print("  ");
        }
        }
            System.out.println();
        }
    }
}

patterns "B"

public class Demo4{
    public static void main(String[] args) {
        for(int row = 0;row<7;row++){
            
            for(int col = 0; col< 5;col++){
        if (col==0 || row == 0 && col!=4 || row==6 && col!=4 || col==4 && row!=0 && row!=6 || row==3) {
            System.out.print("* ");
        } else {
            System.out.print("  ");
            }
        }
            System.out.println();
        }
    }
}

pattern "G"

public class Demo4{
    public static void main(String[] args) {
        for(int row = 0;row<7;row++){
            
            for(int col = 0; col< 5;col++){
        if (col==0 || row==0 || row==6 || col==4 && row!=1 && row!=2 || row==3 & col!=1 && col!=2) {
            System.out.print("* ");
        } else {
            System.out.print("  ");
            }
        }
            System.out.println();
        }
    }
}

pattern "J"

public class Demo4{
    public static void main(String[] args) {
        for(int row = 0;row<7;row++){
            for(int col = 0; col< 5;col++){
        if (row ==0 || col==2 || row ==6 && col!=3&& col!=4 || col==0 && row!=4 && row!=3 && row!=2&& row!=1  ) {
            System.out.print("*");
        } else {
            System.out.print(" ");
            }
        }
            System.out.println();
        }
    }
}

pattern "K"

public class Demo4{
    public static void main(String[] args) {
        for(int row = 0;row<7;row++){
            for(int col = 0; col< 5;col++){
        if (col==0 || row==0 && col!=1 && col!=2 && col!=3 || row==1&& col!=4 && col!=2 && col!=1 || row==2 && col!=4 && col!=3 && col!=1 || row ==3 && col!=2&& col!=3&& col!=4 || row==4 && col!=1 && col!=3&& col!=4 || row==5 && col!=1&& col!=2&& col!=4 ||row==6 && col!=1 && col!=2&& col!=3   ) {
            System.out.print("*");
        } else {
            System.out.print(" ");
            }
        }
            System.out.println();
        }
    }
}

Another way:-

if (col==0 || row+col==4 || row-col==2 )

pattern "Q"

public class Demo4{
    public static void main(String[] args) {
        for(int row = 0;row<6;row++){
            for(int col = 0; col< 6;col++){
        if (col==0 && row!=5|| row==0 && col!=5 || row==4 && col!=5 || col==4 &&row!=5 || row==col && row>1 ) {
            System.out.print("* ");
        } else {
            System.out.print("  ");
            }
        }
            System.out.println();
        }
    }
}

pattern "V"

public class Demo4{
    public static void main(String[] args) {
        for(int row = 0;row<6;row++){
            for(int col = 0; col< 11;col++){
        if (row==col || row+col==10) {
            System.out.print("* ");
        } else {
            System.out.print("  ");
            }
        }
            System.out.println();
        }
    }
}

pattern "W"

public class Demo4{
    public static void main(String[] args) {
        for(int row = 0;row<4;row++){
            for(int col = 0; col< 7;col++){
        if (col == 0 || col==6 || col-row==3 || row+col==3) {
            System.out.print("* ");
        } else {
            System.out.print("  ");
            }
        }
            System.out.println();
        }
    }
}


pattern "X"

public class Demo4{
    public static void main(String[] args) {
        for(int row = 0;row<7;row++){
            for(int col = 0; col< 7;col++){
        if (row==col|| col+row==6 ) {
            System.out.print("* ");
        } else {
            System.out.print("  ");
            }
        }
            System.out.println();
        }
    }
}

pattern "Y"

public class Demo4{
    public static void main(String[] args) {
        for(int row = 0;row<7;row++){
            for(int col = 0; col< 7;col++){
        if (row==col && row <4 || row + col ==6 && row <4 ||col ==3 && row>3  ) {
            System.out.print("* ");
        } else {
            System.out.print("  ");
            }
        }
            System.out.println();
        }
    }
}


		Operator Precedence and Associativity in java


Precedence	Category		Operator				Associativity
1		Postfix			() [] . (dot operator)			Left to right
2		Unary			++ -- + - ~ !				Right to left
3		Multiplicative		* / %					Left to right
4		Additive		+ -					Left to right
5		Shift			<< >> >>>				Left to right
6		Relational		< <= > >= instanceof			Left to right
7		Equality		== !=					Left to right
8		Bitwise AND		&					Left to right
9		Bitwise XOR		^					Left to right
10		Bitwise OR		|					Left to right
11		Logical AND		&&					Left to right
12		Logical OR		||					Left to right
13		Conditional		?:					Right to left
14		Assignment		= += -= *= /= %= &= ^= |= <<= >>= >>>=	Right to left	




